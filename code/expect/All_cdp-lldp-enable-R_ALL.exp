#!/usr/bin/expect
log_user 0
set ip [ lindex $argv 0 ]
set username dszajtse
set password J5j4j3j2j1
#set username dima.z
#set password pfqwtd

set i 0
set timeout 1
set time 120000
set match_max 99999
set send_human {0.01 .00001 1 .000001 5}
set model 0
set port 0
set command 0
set prompt 0

match_max 999000

spawn telnet $ip
set u 0
set p 0
set n 0
set timeout 0
while 1 {
expect {
"Fast Ethernet Switch" {set timeout 1;expect "sdfsdfsdf";set timeout 0;set out $expect_out(buffer);set ret [regexp -nocase {([[:punct:][:alnum:]]*) Fast Ethernet Switch *} $out str model]}
"Login:.*" {send "$username\r";incr u +1}
"login:" {send "$username\r";incr u +1}
"username:" {send "$username\r";incr u +1}
"Username:" {send "$username\r";incr u +1}
"UserName:" {send "$username\r";incr u +1}
"Password:" {send "$password\r";incr p +1}
"password:" {send "$password\r";incr p +1}
"#" {send "\r";break}
">" {send "enable\r"; expect "Password" {send "$password\r";break}}
"failed" {send_user "$ip;\n";exit 10}
"Invalid" {send_user "$ip;\n";exit 10}
}
if { "$u" == "1" && "$p" == "1" } {set username sadmin; set password ghbitktw}
if { "$u" == "2" && "$p" == "2" } {set username dima.z; set password pfqwtd}
if { "$u" == "5" && "$p" == "5" } {send_user "$ip;\n";exit 10}
incr n +1
if { "$n" >= "$time" } {send_user "$ip;\n";exit 20}
}

if { "$model" == "0" } {
set timeout 1;expect "sdfsdfsdf";set timeout 0
set out $expect_out(buffer)
set ret [regexp -nocase {.*CLI session with the (.*) is opened..*\n} $out str model]
if { "$ret" == "0" } {
set model 0
}
}


set timeout 0
set n 0
if { "$model" == "0" } {
while 1 {expect "#" {send -h "term len 0\r";break};if { "$n" >= "$time" } { set i 0;exit 30};incr n +1}
while 1 {expect "#" {send -h "show version\r";break};if { "$n" >= "$time" } { set i 0;exit 30};incr n +1}
while 1 {expect "#" {send -h "\n\n\r";break};if { "$n" >= "$time" } { set i 0;exit 30};incr n +1}
set timeout 2;expect "sdfsdfsdf";set timeout 1
set out $expect_out(buffer)
#send_user "\nBUFFER:\n$out\n:BUFFER\n"
set ret [regexp -nocase {Model number: *([[:punct:][:alnum:]]*)} $out str model]
if { "$ret" == "0" } {
send_user "ERROR No define model $ip\n"
send "exit\n"
send "logout\n"
exit 20
}
}





send_user "$ip;$model\n"

switch -regexp -matchvar foo -- $model {
ES3552M {set port 52}
(DES-3200-28.*|DES-1210-28.*|ES3528.*|ECS3510-28.*|.*C29.*-24.*) {set port 28}
(DES-3200-10.*|DES-1210-10.*|ES3510.*|ECS3510-52.*) {set port 10}
}

switch -regexp -matchvar foo -- $model {
(DES-1210-10.*|DES-1210-28.*|DES-3200-10.*|DES-3200-28.*) {
set prompt "#"
set command "
{enable lldp}
{exit}
{save}
{ }
{logout}
"

}
C29.*-24.* {
set prompt "#"
set command "
{configure}
{cdp run}
{exit}
{cop run st}
{ }
{exit}
"
}
(ES3510M.*|ES3528M|ES3552M|ECS3510-28.*|ECS3510-52.*) {
set prompt "#"
set command "
{configure}
{lldp}
{interface ethernet 1/1-$port}
{lldp admin-status tx-rx}
{exit}
{exit}
{cop run st}
{exit}
"
}
}


set a 0
set n 0
#send_user "command: $command prompt:$prompt model:$model"
if { "$command" != "0" && "$prompt" != "0" } {
while { $a < [llength $command] } {
    set com "[lindex $command $a]\n"
    send "\r"
    while 1 {expect "$prompt" {send -h "$com\r";break};if { "$n" >= "$time" } { set i 0;exit 30};incr n +1}
    incr a +1
    send_user "...\n"
}
}


set timeout 1
expect "sdfsdf"
exit 100
